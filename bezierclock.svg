<svg viewBox="-50 -50 100 100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!--
	Inspired by 9gag.com/gag/aqN6ONM
	Full credit goes to alborz.design
	https://web.archive.org/web/20171030071026/alborz.design/ours.html
-->
	<defs>
		<rect id="bigTick"   x="-1"    y="-48" width="2"   height="5" fill="#000"/>
		<rect id="smallTick" x="-0.25" y="-48" width="0.5" height="2" fill="#000"/>
		<g id="hourTicks">
			<use xlink:href="#bigTick"/>
			<use xlink:href="#smallTick" transform="rotate(6)"/>
			<use xlink:href="#smallTick" transform="rotate(12)"/>
			<use xlink:href="#smallTick" transform="rotate(18)"/>
			<use xlink:href="#smallTick" transform="rotate(24)"/>
		</g>
	</defs>
	<g id="Dial">
		<use xlink:href="#hourTicks"/>
		<use xlink:href="#hourTicks" transform="rotate(30)"/>
		<use xlink:href="#hourTicks" transform="rotate(60)"/>
		<use xlink:href="#hourTicks" transform="rotate(90)"/>
		<use xlink:href="#hourTicks" transform="rotate(120)"/>
		<use xlink:href="#hourTicks" transform="rotate(150)"/>
		<use xlink:href="#hourTicks" transform="rotate(180)"/>
		<use xlink:href="#hourTicks" transform="rotate(210)"/>
		<use xlink:href="#hourTicks" transform="rotate(240)"/>
		<use xlink:href="#hourTicks" transform="rotate(270)"/>
		<use xlink:href="#hourTicks" transform="rotate(300)"/>
		<use xlink:href="#hourTicks" transform="rotate(330)"/>
	</g>
	<g id="Hands">
		<path id="HoursMinutes" stroke="#888" stroke-width="2" stroke-linecap="round" fill="none"/>
		<path id="MinutesSeconds" stroke="#080" stroke-width="1.5" stroke-linecap="round" fill="none"/>
		<circle id="secondsCircle" r="4" stroke="#080" stroke-width="1" fill="white" fill-opacity="0.75" />
		<text id="secondsText" font-size="5.5px" text-anchor="middle" alignment-baseline="middle">Try Chrome</text>
	</g>
	<text id="digitalTime" text-anchor="middle" y="20">Try Chrome</text>
	<script type="text/javascript"> <![CDATA[
		var HoursMinutesPath = document.getElementById('HoursMinutes');
		var MinutesSecondsPath = document.getElementById('MinutesSeconds');
		var SecondsCircle = document.getElementById('secondsCircle');
		var SecondsText = document.getElementById('secondsText');
		var digitalTime = document.getElementById('digitalTime');
		var timezoneOffsetHours = new Date().getTimezoneOffset() / 60;
		
		/* Returns the data for an svg path representing a quadratic bÃ©zier curve
		 * starting at (x1 y1) and ending at (x2 y2) with (0 0) as the control point */
		function PathData(x1, y1, x2, y2){
			return 'M'+x1+' '+y1+'Q0 0 '+x2+' '+y2;
		}
		
		function update(){
			var	hours, hourX, hourY,
				minutes, minuteX, minuteY,
				seconds, secondX, secondY,
				time;
			
			time = Date.now();
			/* There must be a better way for this, but for now: */
			hours	= ( time / (1000*60*60) - timezoneOffsetHours ) % 24;
			minutes	= ( time / (1000*60   ) ) % 60;
			seconds	= ( time /  1000        ) % 60;
			hourX	=  Math.sin( (2*Math.PI*hours  ) / 12 );
			hourY	= -Math.cos( (2*Math.PI*hours  ) / 12 );
			minuteX	=  Math.sin( (2*Math.PI*minutes) / 60 );
			minuteY	= -Math.cos( (2*Math.PI*minutes) / 60 );
			secondX	=  Math.sin( (2*Math.PI*seconds) / 60 );
			secondY	= -Math.cos( (2*Math.PI*seconds) / 60 );
			
			HoursMinutesPath.setAttribute( 'd',
				PathData( hourX*45, hourY*45, minuteX*45, minuteY*45 )
			);
			MinutesSecondsPath.setAttribute( 'd',
				PathData( minuteX*41, minuteY*41, secondX*41, secondY*41 )
			);
			SecondsCircle.setAttribute( 'cx', secondX*45.5 );
			SecondsCircle.setAttribute( 'cy', secondY*45.5 );
			SecondsText.setAttribute( 'x', secondX*45.5 );
			SecondsText.setAttribute( 'y', secondY*45.5+0.5 );
			SecondsText.innerHTML = Math.floor(seconds);
			digitalTime.innerHTML = ("0"+~~hours).slice(-2)+":"+("0"+~~minutes).slice(-2);

			window.requestAnimationFrame(update);
		}
		
		window.onload = update();
	]]></script>
</svg>
